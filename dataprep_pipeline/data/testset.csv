,problem_number,chapterwise_problem_number,PRB,SOL
24,28,2.25.,"Python. The following Python code snippet (Fig. 2.10) is part of a machine learning module in 2.2. PROBLEMS 1 ^^I^^I 2 from scipy.special import expit 3 import numpy as np 4 import math 5 ^^I^^I 6 def Func006(y_hat, y): if y == 1: return np.log(y_hat) else: return np.log(1  y_hat)^^I FIGURE 2.10: Logistic regression methods in Python. Analyse the method Func006 presented in Fig. 2.10. What important concept in machine learning does it implement?",The function implemented in Fig. 2.10 is the binary crossentropy function.
25,29,2.26.,"same function. The following Python code snippet (Fig. 2.11) presents several different variations of the LOGISTIC REGRESSION 1 ^^I^^I 2 from scipy.special import expit 3 import numpy as np 4 import math 6 def Ver001(x): return 1 / (1 + math.exp(x)) 9 def Ver002(x): return 1 / (1 + (np.exp(x))) 12 WHO_AM_I = 709 14 def Ver003(x): return 1 / (1 + np.exp((np.clip(x, WHO_AM_I, None)))) FIGURE 2.11: Logistic regression methods in Python. 1. Which mathematical function do these methods implement? 2. What is signiﬁcant about the number 709 in line 11? 3. Given a choice, which method would you use? 2.3 Solutions 2.3.1 General Concepts","1. All the methods are variations of the sigmoid function. 2. In Python, approximately 1.797e + 308 holds the largest possible valve for a ﬂoating point variable. The logarithm of which is evaluated at 709.78. If you try to execute the following expression in Python, it will result in inf : np.log(1.8e + 308). 3. I would use Ver003 because of its stability. Note: Can you entail why is this method more stable than the others?"
